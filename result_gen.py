#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Mar 17 14:46:18 2024

@author: junqi
"""

import matplotlib.pyplot as plt
import numpy as np


def create_acc_loss_graph(train_acc, train_loss, test_acc, test_loss):
    fig, axes = plt.subplots(ncols=2, nrows=1, dpi=300)
    fig.set_size_inches(9, 3)
    ax1, ax2 = axes[0], axes[1]
    
    ax1.plot(train_acc, '-o', label="train", markersize=4)
    ax1.plot(test_acc, '--+', label="test", markersize=4)
    ax1.set_xlabel('Epoch')
    ax1.set_ylabel('Accuracy')
    ax1.legend(loc=3)
    
    ax2.plot(train_loss, '-o', label='train', markersize=4)
    ax2.plot(test_loss, '--+', label='test', markersize=4)
    ax2.set_xlabel('Epoch')
    ax2.set_ylabel('Loss')
    ax2.legend(loc=1)
    
    # Plot the parameters
    ax1.set_ylim(0, np.max([np.max(train_acc), np.max(test_acc)]) + 0.1)
    ax2.set_ylim(-0.1, np.max([np.max(train_loss), np.max(test_loss)]) + 0.1)
    ax1.grid(True, which='both', linewidth=0.1)
    ax2.grid(True, which='both', linewidth=0.1)
    plt.tight_layout()
    plt.show()
    
    
test_loss_pca_vqc_gen = [0.6976893985271454, 0.6895057857036591, 0.6827802014350891,
                         0.6769130158424378, 0.6717692983150482, 0.6672418165206909,
                         0.6632980751991272, 0.6599337482452392, 0.6571234905719757,
                         0.654806877374649,  0.6528949511051177, 0.6512886440753937,
                         0.6498942935466766, 0.6486289238929749, 0.647421305179596,
                         0.6462142252922058, 0.6449704849720002, 0.6436788523197174,
                         0.6423576402664185, 0.6410526198148727, 0.6398226028680801,
                         0.638714639544487,  0.6377466160058975, 0.63690893471241,
                         0.6361768436431885, 0.6355217009782791, 0.6349175161123276,
                         0.6343439096212387, 0.6337862920761108, 0.6332348477840424]


test_acc_pca_vqc_gen = [0.4775, 0.5575, 0.5825, 0.595, 0.6, 0.615, 0.6225, 0.635,
                        0.645, 0.64, 0.6375, 0.64, 0.6475, 0.66, 0.665, 0.6675,
                        0.6675, 0.675, 0.6775, 0.6825, 0.6925, 0.6975, 0.7, 0.69,
                        0.6775, 0.6775, 0.68, 0.6825, 0.68, 0.6875]


test_loss_resnet50_vqc_gen = [0.6126590013504029, 0.5332802259922027,  0.4599283945560455,
                              0.4474312257766724, 0.40600688457489015, 0.41925103813409803,
                              0.3767712864279747, 0.36810732781887057, 0.39606328547000885,
                              0.3542307448387146, 0.36845799833536147, 0.3722527861595154,
                              0.3421864613890648, 0.3472720503807068,  0.318541818857193,
                              0.3181205967068672, 0.30981344610452655, 0.3204785943031311,
                              0.3226867085695267, 0.3449148654937744,  0.35275813460350036,
                              0.35736374437808993,0.3614791521430016,  0.3250760397315025,
                              0.35458258956670763,0.3317860972881317,  0.35433572113513945,
                              0.3206134098768234, 0.29722493439912795, 0.30262203872203824]

test_acc_resnet50_vqc_gen = [0.7975, 0.8325, 0.815, 0.8525, 0.8475, 0.875, 0.885,
                             0.845, 0.8725, 0.86, 0.8625, 0.895, 0.88, 0.9125, 0.91,
                             0.9075, 0.905, 0.9, 0.8825, 0.885, 0.88, 0.8775, 0.9075,
                             0.87, 0.8825, 0.8775, 0.895, 0.9175, 0.915]

test_loss_resnet18_vqc_gen = [0.5445668107271194, 0.457185098528862, 0.4030540519952774,
                              0.3598562324047089, 0.3364250639081001, 0.33083425134420397,
                              0.3240823549032211, 0.31621926724910737, 0.3154210433363914,
                              0.3050004822015762, 0.30323858082294464, 0.30372597187757494,
                              0.3056733411550522, 0.307624080479145, 0.3075808209180832,
                              0.2903125786781311, 0.28531181514263154, 0.277419880926609,
                              0.27556103229522705, 0.28277312010526656, 0.27620064228773117,
                              0.27201164871454236, 0.2723821595311165, 0.2725638726353645,
                              0.2724564841389656, 0.27245414048433303, 0.2723790302872658,
                              0.27223033607006075, 0.2764761847257614, 0.27475582927465436]

test_acc_resnet18_vqc_gen = [0.865, 0.89, 0.89, 0.9175, 0.9175, 0.9125, 0.91, 0.92,
                             0.9175, 0.9175, 0.92, 0.9175, 0.9175, 0.915, 0.915, 0.93,
                             0.9375, 0.9375, 0.935, 0.9275, 0.9375, 0.94, 0.94, 0.94,
                             0.94, 0.94, 0.94, 0.94, 0.93, 0.9325]


fig, axes = plt.subplots(ncols=2, nrows=1, dpi=300)
fig.set_size_inches(12, 4)
ax1, ax2 = axes[0], axes[1]
    
ax1.plot(test_acc_pca_vqc_gen, '-o', label="PCA+VQC", markersize=4)
ax1.plot(test_acc_resnet18_vqc_gen, '--+', label="Pre-ResNet18+VQC", markersize=4)
ax1.plot(test_acc_resnet50_vqc_gen, '--', label="Pre-ResNet50+VQC", markersize=4)
ax1.set_xlabel('Epoch')
ax1.set_ylabel('Accuracy')
ax1.legend(loc=4)

ax2.plot(test_loss_pca_vqc_gen, '-o', label='PCA+VQC', markersize=4)
ax2.plot(test_loss_resnet18_vqc_gen, '--+', label='Pre-ResNet18+VQC', markersize=4)
ax2.plot(test_loss_resnet50_vqc_gen, '--', label='Pre-ResNet50+VQC', markersize=4)
ax2.set_xlabel('Epoch')
ax2.set_ylabel('Loss')
ax2.legend(loc=2)

fig.savefig('result_gen.jpg', dpi=300)
